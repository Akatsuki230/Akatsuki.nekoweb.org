---
import Meta from "@components/meta.astro";
import type { AstroInstance } from "node_modules/astro/dist/@types/astro";
import '@styles/global.module.css';
import Header from "@components/header.astro";
import Footer from "@components/footer.astro";
import blogListStyles from '@styles/blogList.module.css';

let posts = (await Astro.glob("./**/*.astro")) as (AstroInstance & { name: string, description: string, date: string })[];

posts.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());

function stringCutoff(string: string, letterLimit: number) {
    const words = string.split(' ');
    let currentLength = 0;
    let lastValidWord = 0;

    for (let i = 0; i < words.length; i++) {
        const wordLength = words[i].length;
        if (currentLength + wordLength + 1 > letterLimit) {
            break;
        }

        currentLength += wordLength + 1;
        lastValidWord = i + 1;
    }

    const result = words.slice(0, lastValidWord).join(' ');

    if (string.length > letterLimit) {
        return result.trim() + '...';
    } else {
        return result;
    }
}

---

<!DOCTYPE html>
<html lang="en">
<head>
    <Meta name="Blog posts" description="Blog posts on Akatsuki's website" />
</head>
<body>
    <Header />
    <main>
        <h1>Welcome to my blog posts!</h1>
    {posts.map((x: AstroInstance & { name?: string, description?: string, date?: string }) => {
        if (!x.name || !x.description || !x.date) return null;
        return <div class={blogListStyles.blog}>
            <h2>{stringCutoff(x.name, 40)}</h2>
            <p>{stringCutoff(x.description, 70)}</p>
            <p>Created {x.date}</p>
            <a href={x.url}>Read more</a>
        </div>
    })}
    </main>
    <Footer />
</body>
</html>